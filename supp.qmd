---
title: "Extreme heat"
bibliography: ./bib/refs.bib
csl: ./bib/integrative-and-comparative-biology.csl
format:
 html:
    toc: true
    toc-location: left
    toc-depth: 3
    toc-title: "**Table of Contents**"
    output-file: "index.html"
    theme: cosmo
    embed-resources: true
    code-fold: show
    code-tools: true
    number-sections: true
    fontsize: "12"
    max-width: "10"
    code-overflow: wrap
editor_options: 
  chunk_output_type: console
execute:
  freeze: auto  # re-render only when source changes
  cache: false
  echo: false
  warning: false
  error: false
  include: true
crossref:
  fig-title: 'Figure'
  fig-labels: arabic
  title-delim: "-"
  fig-prefix: "Figure"
  tbl-prefix: "Table"
editor: 
  markdown: 
    wrap: 80
---

```{r, libraries}
#| label: libraries
#| echo: false
#| message: false
#| warning: false

# Install pacman for easy loading and installation of packages
if(!requireNamespace("pacman", quietly = TRUE)) {
  install.packages("pacman")
}

# Load required packages
pacman::p_load(terra, sf, ggplot2, rnaturalearth, mapview, raster, NicheMapR, lutz)

```

## Data Preparation

Lets first map the Heat Wave Days (HWD) across the Sleepy lizard distribution. We need to extract the raster data on HWD and crop by the sleep lizard distribution. Then, we need to find the grid cells that show high HWD and low HWD at the same latitude. 

```{r, spatial_dat}
#| label: spatial_dat
#| echo: false
#| message: false
#| warning: false

# Load the NetCDF file
nc_file <- "./indir/BEST (Berkeley Earth Surface Temperature) 1880-2021_TX90p_ANN_AverageMap_2000-2021_-40.45to-9.94_107.27to170.02.nc"
nc_data <- terra::rast(nc_file)

# You can select the first layer or a specific variable
r <- nc_data[[1]]

# Load the Sleepy Lizard range shapefile
sleepy_lizard <- st_read("./indir/sleepy_lizzard_range/data_0.shp")

# Make sure CRS match
sleepy_lizard <- st_transform(sleepy_lizard, crs(r))

# Country outline: Australia
australia <- ne_countries(scale = "large", country = "Australia", returnclass = "sf")
australia <- st_transform(australia, crs(r))

# Crop raster to sleepy lizard extent because that's all we need for microclimate models
r_crop <- raster::mask(crop(r, extent(sleepy_lizard)), sleepy_lizard) # crop

# Convert raster to data frame for ggplot
r_df <- as.data.frame(r_crop, xy = TRUE, na.rm = TRUE)
names(r_df)[3] <- "value"  # Rename value column

# Plot points
points <- r_df  %>% dplyr::filter(((x > 125 & x < 130) | (x > 145 & x < 150)) & (y > -30 & y < -29))

# Plot with ggplot
ggplot() +
  geom_raster(data = r_df, aes(x = x, y = y, fill = value)) +
  geom_point(data = points, aes(x = x, y = y)) +
  scale_fill_viridis_c(option = "plasma", na.value = NA) +
  geom_sf(data = sleepy_lizard, fill = NA, color = "black", size = 0.8, lwd = 0.5) +  # <- thicker lines
  geom_sf(data = australia, fill = NA, color = "black", size = 0.8, lwd = 0.5) +
  coord_sf() +
  theme_minimal() +
  labs(title = "Extreme Weather with Sleepy Lizard Range",
       fill = "Extreme Weather\nValue")
```

## Microclimate models

Now, we have the points of interest mapped. Next, we can use these points to extract microclimate data from the raster layers. This will allow us to analyze the specific environmental conditions experienced by the Sleepy Lizard in relation to extreme heat events.

```{r}
#| label: microclimate_models
#| echo: false
#| message: false
#| warning: false

# Extract microclimate data for points of interest. Run once for now and save object

#locs <- list()
#for (i in 1:nrow(points)) {
#  locs[[i]] <- NicheMapR::micro_silo(loc = c(points[i,1], points[i,2]), email = "pieter.arnold@anu.edu.au")
#}
#saveRDS(locs, "./outdir/micro/micro_locs_10.RDS")

locs <- readRDS("./outdir/micro/micro_locs_10.RDS")
summary(locs)

```

## Heat and water budgets plus dynamic energy budgets

We have microclimates at the 10 locations in australia for those grids (size to be determined). Now we want to use the ectotherm function to calculate water and heat budgets for a Sleepy lizard at those locations along with activity budgets based on thermoregulatory parameters. We can also compute DEB life cycles at these locations too. 

```{r}
#| label: sleepy_DEB
#| echo: false
#| message: false
#| warning: false

#### Parameters ####

# Dynamic energy budget parameters. We'll do this later

# Thermoregulatory parameters (Needed for Heat Budget and Activity Models)
       Ww_g <- 180              # g, body mass. Weight at puberty from Mike's Table 2
      shape <- 1                # cylinder
    shape_b <- 10               # ratio of long to short axis of cylinder
     T_pref <- 33.5             # preferred body temperature (animal will attempt to regulate as close to this value as possible)
    T_F_min <- 26               # degrees C, lower body temperature for foraging
    T_F_max <- 39               # degrees C, upper body temperature for foraging
    T_B_min <- 13               # degrees C, minimum basking temperature
   T_RB_min <- 13              # degrees C, temperature at which animal will move to a basking site
     CT_max <- 42               # degrees C, critical thermal maximum (animal will die if CT_kill = 1 and this threshold is exceeded)
     CT_min <- 3.5              # degrees C, critical thermal minimum (used by program to determine depth selected when inactive and burrowing)

#### Traits ####

# Behavioural traits (needed for Activity Models)
      diurn <- 1                 # Diurnal activity allowed (1) or not (0)?
    nocturn <- 0                 # Nocturnal activity allowed (1) or not (0)?
     crepus <- 0                 # Crepuscular activity allowed (1) or not (0)?
     burrow <- 1                 # Shelter in burrow allowed (1) or not (0)?
 shade_seek <- 1                 # Shade seeking allowed (1) or not (0)?
   pct_cond <- 10                # Percentage of animal surface contacting the substrate (\%)

# Life history traits. Do for DEB
# clutchsize <- 8                # Eggs per clutch
#       L_b <- L.b              # Structural length at birth (cm)}\cr}

#### Run ectotherm model for heat and activity budgets ####
ecto_heat_activity <- list()

for(i in 1:length(locs)) {

micro <- locs[[i]]

  ecto_heat_activity[[i]] <- ectotherm( Ww_g = Ww_g,
                      shape = shape,
                    shape_b = shape_b,
                     T_pref = T_pref,
                    T_F_min = T_F_min,
                  T_F_max = T_F_max,
                  T_B_min = T_B_min,
                 T_RB_min = T_RB_min,
                   CT_min = CT_min,
                   CT_max = CT_max,
                    diurn = diurn,
                  nocturn = nocturn,
                   crepus = crepus,
               shade_seek = shade_seek,
                   burrow = burrow,
                 pct_cond = pct_cond,
                   nyears = 2,
                   metout = micro$metout,
                     soil = micro$soil, 
                  soilpot = micro$soilpot,
                soilmoist = micro$soilmoist, 
                    humid = micro$humid,
                    tcond = micro$tcond, 
                  shadmet = micro$shadmet,
                 shadsoil = micro$shadsoil, 
                  shadpot = micro$shadpot,
                shadmoist = micro$shadmoist,
                shadhumid = micro$shadhumid,
                shadtcond = micro$shadtcond)

}



```

